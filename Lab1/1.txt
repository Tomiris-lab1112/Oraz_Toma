Конспект по Git
Что такое Git?

Git — это система управления версиями, которая фиксирует изменения в коде и позволяет вести работу над разными версиями проекта параллельно.

Возможности Git:
• возврат к более ранним версиям файлов;
• просмотр истории изменений с указанием авторов и времени;
• отмена или корректировка нежелательных правок.


Как работает Git

Обычно Git используют через командную строку.
Хотя многие редакторы предоставляют встроенные графические клиенты, знание консольных команд даёт преимущества:
• лучшее понимание принципов работы Git;
• универсальность (можно использовать на любом компьютере);
• возможность работы на серверах без графического интерфейса.


Первичная настройка

Задаём имя и email пользователя:
git config --global user.name "Ваше имя"
git config --global user.email "email@example.com"

Определяем основную ветку:
git config --global init.defaultBranch main
Корректная обработка окончаний строк:
git config --global core.autocrlf input
git config --global core.safecrlf warn
Windows:
git config --global core.autocrlf true
git config --global core.safecrlf warn

Создание нового репозитория
	1.	Создаём директорию и файл:
mkdir work
cd work
touch hello.html
    2.	Инициализируем репозиторий:
git init
	3.	Добавляем файл и делаем первый коммит:
git add hello.html
git commit -m "Первый коммит"
	4.	Проверяем текущее состояние:
git status
Работа с изменениями

Индексация

Добавляем файл или изменения в индекс:
git add hello.html
git status

Коммит
Сохраняем изменения в историю:
git commit -m "Добавлены базовые теги HTML"

История коммитов
• Полный лог:
git log
• Краткий вид:
git log --oneline
• Настраиваемый формат:
git log --pretty=format:"%h %ad | %s%d [%an]" --date=short

Возврат к предыдущим версиям
•	Переход по хэшу коммита:
git checkout <hash>
•	Возврат в основную ветку:
git switch main

Работа с тегами
Создание и переход по тегам:
git tag v1
git tag v1-beta
git checkout v1
git checkout v1-beta
git tag

Отмена изменений
•	Если изменения не были проиндексированы:
git restore hello.html
•	Если файл уже в индексе:
git restore --staged hello.html
git restore hello.html

Ключевые моменты
•	Git фиксирует изменения, а не сами файлы.
•	Каждое изменение можно подготовить (индексировать) и сохранить (закоммитить).
•	Знание Git даёт свободу работать в любом окружении, даже без графического интерфейса.